const express = require('express');
const router = express.Router();
const path = require('path');
// const serviceAluno = require(__dirname + '/service/service-aluno');
const serviceAluno = require('../service/service-aluno');
const QRCode = require('qrcode');
const unirest = require('unirest');
const request = require('request');
const fs = require('fs');


// function callback(error, response, body) {
//   if (!error && response.statusCode == 200) {

//   	console.log('body', body);
//     // var info = JSON.parse(body);
//     // console.log(info.stargazers_count + " Stars");
//     // console.log(info.forks_count + " Forks");

//     fs.readFile('testeeeee.png', function(err, data) {
// 		if (err) throw err; // Fail if the file can't be read.
// 		else {
// 			// res.writeHead(200, {'Content-Type': 'image/jpeg'});
// 			// res.end(data); // Send the file data to the browser.

// 			console.log('imagem', data);

// 			res.render('qrcode', { title: 'QRCode' });
// 		}
// 	});
//   }
// }


router.get('/2', function() {
	var path = './tmp.png'
	QRCode.toFile(path, 'life of the party bros', {
	  color: {
	    dark: '#00F', // Blue modules
	    light: '#0000' // Transparent background
	  }
	}, function (err) {
	  if (err) throw err
	  console.log('saved.')
	});

	QRCode.toDataURL('I am a pony!', 
			{
				color: {
				    dark: '#ff0000', // Blue modules
				    light: '#ffb3b3' // Transparent background
			    }
			},
		function (err, url) {
	  console.log(url)
	  res.render('qrcode', { title: 'QRCode', qrsvg:  url});
	})

	// QRCode.toCanvas('text', { errorCorrectionLevel: 'H' }, function (err, canvas) {
	// 	if (err) throw err

	// 	console.log('canvas', canvas);
	// 	var container = document.getElementById('canvas');
	// 	container.appendChild(canvas);

	// 	res.render('qrcode', { title: 'QRCode', qrsvg:  QRCode});
	// })

	QRCode.toString('http://www.google.com', function (err, string) {
		if (err) throw err
		
		// res.render('qrcode', { title: 'QRCode', qrsvg:  string});
	})

	request('')
	.pipe(fs.createWriteStream('teste.png'));

	unirest.get("https://unitag-qr-code-generation.p.mashape.com/api?data=%7B%22TYPE%22%3A%22text%22%2C%22DATA%22%3A%7B%22TEXT%22%3A%22Hello+World!%22%7D%7D&setting=%7B%22LAYOUT%22%3A%7B%22COLORBG%22%3A%22ffffff%22%2C%22GRADIENT_TYPE%22%3A%22NO_GR%22%2C%22COLOR1%22%3A%22000000%22%7D%2C%22EYES%22%3A%7B%22EYE_TYPE%22%3A%22Simple%22%7D%2C%22E%22%3A%22M%22%2C%22BODY_TYPE%22%3A0%7D")
	.header("X-Mashape-Key", "5qV9X3lyXhmshQWto4GHptzBdHyDp1pgiUejsnfEODgZncycbc")
	.end(function (result) {
		console.log('status', result.status);
		console.log('headers', result.headers);
		console.log('body',result.body);

		// string generated by canvas.toDataURL()
		var img = "data:image/png;base64," + result.body;
		// strip off the data: url prefix to get just the base64-encoded bytes
		var data = img.replace(/^data:image\/\w+;base64,/, "");
		var buf = new Buffer(result.body);
		// var buf = new Buffer(result.body);
		fs.writeFile('image.png', result.body, function(err){
		    if (err) throw err;
		    console.log('File saved.')     
		  });

		// res.writeHead(200, {'Content-Type': 'image/png', 'Content-Length': result.headers['content-length']});

		res.render('qrcode', { title: 'QRCode', qrsvg: result});
		// res.render('qrcode', { title: 'QRCode', qrsvg: result.body});
	});

	res.render('qrcode', { title: 'QRCode' });
});

function gerarQRCodeUnitag(sqAluno, callback) {
	//Usando unitag-qr-code-generation
	var data = {
		TYPE: "text",
		DATA: {
			TEXT: sqAluno
		}
	};
	var setting = {
		LAYOUT: {
			COLOR1 : "10437d",
			COLORBG: "transparent"
		},
		SIZE: 350,
		EYES: { 
			EYE_TYPE: "Simple",
			COLOR_IHG : "231f20",
			COLOR_IHD : "231f20",
			COLOR_IBG : "231f20"
		},
		// LOGO : {
		// 	L_NAME : "http://web.unifil.br/logoColegioAguia.png",
		// 	L_WIDTH : 0.7,
		// 	L_LENGTH : 1.0,
		// 	EXCAVATE : true
		// },
		E: "H",
		BODY_TYPE: 0
	};

	//http://localhost:3000/images/

	// console.log('https://unitag-qr-code-generation.p.mashape.com/api?data=' + encodeURIComponent(JSON.stringify(data)) + "&setting=" + encodeURIComponent(JSON.stringify(setting)));

	//dmorita   = '5qV9X3lyXhmshQWto4GHptzBdHyDp1pgiUejsnfEODgZncycbc'
	//varthuzo  = 'ocLjMINGoYmsh2AHFRW09YJk5llAp1TV1i2jsnzqTy7wXEvhwP'
	//wpiornedo = 'thEjMd9j6Vmshla7IUMXVgMXSbNNp1OyWGHjsnZNF8dkYC1n7Z'
	var options = {
	  url: 'https://unitag-qr-code-generation.p.mashape.com/api?data=' + encodeURIComponent(JSON.stringify(data)) + "&setting=" + encodeURIComponent(JSON.stringify(setting)),
	  headers: {
	    'X-Mashape-Key': 'ocLjMINGoYmsh2AHFRW09YJk5llAp1TV1i2jsnzqTy7wXEvhwP'
	  }
	};

	var path = __dirname + '/../public/images/QRCode/' + sqAluno +  '.png';

	// console.log('path', path);
	fs.exists(path, function(exists) {
	    console.log("file exists ? " + exists);
		if (exists === false) {
			request(options, function (error, response, body) {
		  		if (!error && response.statusCode == 200) {
		  			// console.log('response', response);
		  			// console.log('body', body);
		    		fs.readFile(path, function(err, data) {
		    			callback(err, data);
						// if (err) throw err;
						// else {
						// 	console.log('imagem', data);
						// 	res.render('qrcode', { title: 'QRCode', qtsvg: data});
						// }
					});
		  		} else {
		  			console.log('error', error);
		  			console.log('response', response);
		  			console.log('body', body);
		  			callback(error, response);
		  		}
			}).pipe(fs.createWriteStream(path));
		}
	});
}


function gerarQRCodeMonkey(sqAluno, callback){
	//Usando https://www.qrcode-monkey.com/qr-code-api-with-logo#upload-api
	var data = {
	  	data: "" + sqAluno,
	  	config: {
		    body: "circle-zebra-vertical",
		    eye: "frame13",
		    eyeBall: "ball15",
		    erf1: [],
		    erf2: [],
		    erf3: [],
		    brf1: [],
		    brf2: [],
		    brf3: [],
		    bodyColor: "#0277BD",
		    bgColor: "#FFFFFF",
		    eye1Color: "#075685",
		    eye2Color: "#075685",
		    eye3Color: "#075685",
		    eyeBall1Color: "#0277BD",
		    eyeBall2Color: "#0277BD",
		    eyeBall3Color: "#0277BD",
		    gradientColor1: "#075685",
		    gradientColor2: "#0277BD",
		    gradientType: "linear",
		    gradientOnEyes: false,
		    logo: "#facebook"
	  	},
	  	size: 600,
	  	download: false,
	  	file: "png"
	};

	// console.log('https://unitag-qr-code-generation.p.mashape.com/api?data=' + encodeURIComponent(JSON.stringify(data)) + "&setting=" + encodeURIComponent(JSON.stringify(setting)));

	var options = {
	  url: 'https://qrcode-monkey.p.mashape.com/qr/custom',
	  headers: {
	    'X-Mashape-Key': '5qV9X3lyXhmshQWto4GHptzBdHyDp1pgiUejsnfEODgZncycbc',
	    "Content-Type": 'application/json',
	    body: encodeURIComponent(JSON.stringify(data))
	  }
	};

	var path = __dirname + '/../public/images/QRCode/' + sqAluno +  '.png';

	console.log('path', path);

	request(options, function (error, response, body) {
  		if (!error && response.statusCode == 200) {
  			console.log('response', response);
  			console.log('body', body);
    		fs.readFile(path, function(err, data) {
    			callback(err, data);
				// if (err) throw err;
				// else {
				// 	console.log('imagem', data);
				// 	res.render('qrcode', { title: 'QRCode', qtsvg: data});
				// }
			});
  		} else {
  			console.log('error', error);
  			console.log('response', response);
  			console.log('body', body);
  			callback(error, response, body);
  		}
	}).pipe(fs.createWriteStream(path));
}

router.post('/img', function(req, res, next){
	console.log('body',req);
	console.log('res',res);
	res.send({status: 200 });
})

router.get('/img', function(req, res, next) {
	console.log(__dirname + '../images/tst.png');

	var formData = {
		// Pass a simple key-value pair
		field: 'my_value',
		// Pass data via Buffers
		buffer: Buffer.from([1, 2, 3]),
		// Pass data via Streams
		file: fs.createReadStream(__dirname + '/../public/images/tst.png'),
		// Pass multiple values /w an Array
		// attachments: [
		// 	fs.createReadStream(__dirname + '/attachment1.jpg'),
		// 	fs.createReadStream(__dirname + '/attachment2.jpg')
		// ],
		// Pass optional meta-data with an 'options' object with style: {value: DATA, options: OPTIONS}
		// Use case: for some types of streams, you'll need to provide "file"-related information manually.
		// See the `form-data` README for more information about options: https://github.com/form-data/form-data
		// custom_file: {
		// 	value:  fs.createReadStream('/dev/urandom'),
		// 	options: {
		// 		filename: 'topsecret.jpg',
		// 		contentType: 'image/jpeg'
		// 	}
		// }
	};
	request.post({
			// url : 'https://qrcode-monkey.p.mashape.com/qr/uploadImage', 
			url : 'http://localhost:3000/qrcode/img', 
			headers : {
	    		"X-Mashape-Key" : '5qV9X3lyXhmshQWto4GHptzBdHyDp1pgiUejsnfEODgZncycbc',
	    		"Content-Type" : 'multipart/form-data'
	  		},
	  		formData: formData
  		}, function optionalCallback(err, httpResponse, body) {
	  		if (err) {
	    		return console.error('upload failed:', err);
	    		res.render('qrcode', { title: 'QRCode erro' });
	  		}

	  		console.log('Upload successful!  Server responded with:', body);
	  		res.render('qrcode', { title: 'QRCode' });
		});
})

/* GET users listing. */
router.get('/', function(req, res, next) {

	
	// gerarQRCodeUnitag('007991', function(err, data){
	// 	if (err) {return console.
	// 		error(err);}

	// 	// console.log(data);
	// 	global.gerarPDF('007991');
	// 	res.render('qrcode', { title: 'QRCode' });
	// });
	// console.log(encodeURIComponent('{"TYPE": "text","DATA": { "TEXT": "Hello World!" } }'));

	// gerarQRCodeMonkey(3, function(err, data){
	// 	if (err) {return console.error(err);}

	// 	console.log(data);
	// 	res.render('qrcode', { title: 'QRCode' });
	// });
	// console.log(encodeURIComponent('{"TYPE": "text","DATA": { "TEXT": "Hello World!" } }'));

	// serviceAluno.findById(1, function(err, result){
	// 	if (err) {return console.error(err);}

	// 	// console.log('result',result);
		
	// })

	// res.render('qrcode', { title: 'QRCode' });

	// serviceAluno.findAll(function(err, result){
	// 	if (err) {return console.error(err);}

	// 	// console.log('result',result);
	// 	var alu = {};
	// 	for (var i = 0; i < result.length; i++){
	// 		alu = result[i];
	// 		gerarQRCodeUnitag(alu.SQ_ALUNO, function(err, data){
	// 			if (err) {return console.error(err);}

	// 			// global.gerarPDF(alu.SQ_ALUNO);

	// 		});
	// 	}
		
	// });

	const lista = ['009136','005976','006689','008631'];

	for(var i = 0; i < lista.length; i++){
		gerarQRCodeUnitag(lista[i], function(err, data){
			if (err) {return console.error(err);}

			console.log('data', data);
		});
	}

	

	res.render('qrcode', { title: 'QRCode' });
	
});

module.exports = router;
